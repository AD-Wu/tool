# ====================== 中文本地字符串配置 ========================
# 公共类库信息
commons.pool.type=参数 \"type\" 不能为空
commons.pool.type.invalid=参数 type \"{0}\" 不被支持
commons.pool.name=参数 \"poolName\" 不能为空
commons.pool.name.invalid=连接池名称 \"{0}\" 无效!
commons.pool.conn=参数 \"connectionString\" 不能为空
commons.pool.user=参数 \"user\" 不能为空
commons.pool.status=数据库连接池 \"{0}\" 活动连接数: {1}, 空闲连接数: {2}.
commons.pool.started=数据库连接池 \"{0}\" 已经启动，禁止重复启动
commons.system.status=系统运行状态，CPU: {0} 核; 最大内存: {1} M; 已使用: {2} M; 空闲: {3} M; 线程数: {4}
commons.xml.load=载入 XML 文件 \"{0}\" 失败: {1}
commons.zip.file.zip=压缩文件 \"{0}\" 到 \"{1}\" 失败: {2}
commons.zip.file.unzip=解压缩文件 \"{0}\" 到 \"{1}\" 失败: {2}
commons.redis.name=Redis 参数 \"name\" 不能为空
commons.redis.host=Redis 参数 \"host\" 不能为空
commons.redis.port=Redis 参数 \"port\":{0} 无效
commons.redis.status=Redis 连接池 活跃:{0},空闲:{1},等待:{2}
# 接口层信息
protocol.config.load=加载配置文件 \"{0}\" 失败!
protocol.config.save=保存配置文件 \"{0}\" 失败!
protocol.service.start.err=启动服务 \"{0}\" 失败!
# --- NETWORK ---
protocol.service.err=启动网络服务错误: {0}
protocol.consent.err=关闭应答对象错误: {0}
protocol.consent.timeout=应答对象连接超时
protocol.consent.read.err=读取应答对象数据错误: {0}
protocol.consent.start.err=启动应答对象错误: {0}
protocol.consent.stop.err=停止应答对象错误: {0}
protocol.time.changed=系统时间已由 \"{0}\" 改变为 \"{1}\"，服务将自动调整超时时长
protocol.network.running=正在进行网络监听，应答对象总数: {0}
protocol.network.err=网络数据监听错误: {0}
protocol.http.start.err=启动 TOMCAT 错误: {0}
protocol.http.stop.err=停止 TOMCAT 错误: {0}
protocol.http.send.err=发送 HTTP 数据错误: {0}
protocol.http.rejects=HTTP 请求被服务器拒绝，请确认是否频繁请求数据
protocol.http.close.err=关闭 HTTP 客户端连接错误: {0}
protocol.http.client.err=开始 HTTP 客户端 \"{0}\" 错误: {1}
protocol.ws.text.err=发送 WEBSOCKET 文本信息错误: {0}
protocol.ws.byte.err=发送 WEBSOCKET 字节数据错误: {0}
protocol.ws.flush.err=输出 WEBSOCKET 缓冲区数据错误: {0}
protocol.ws.close=服务器关闭 WEBSOCKET 连接
protocol.ws.close.err=关闭 WEBSOCKET 连接错误: {0}
protocol.ws.rejects=WEBSOCKET 连接被服务器拒绝
protocol.wsc.err=WEBSOKCET 客户端错误: {0}
protocol.wsc.text.err=发送 WEBSOCKET 客户端文本信息错误: {0}
protocol.wsc.byte.err=发送 WEBSOCKET 客户端字节数据错误: {0}
protocol.wsc.flush.err=输出 WEBSOCKET 客户端缓冲区数据错误: {0}
protocol.wsc.close.err=关闭 WEBSOCKET 客户端连接错误: {0}
protocol.serial.available=获取串口可读取的数据字节数错误: {0}
protocol.serial.read.byte=读取串口字节错误: {0}
protocol.serial.read.bytes=读取串口字节数组错误: {0}
protocol.serial.reset=重置串口输入流错误: {0}
protocol.serial.send.byte=发送串口字节数据错误: {0}
protocol.serial.flush=输出串口缓冲区失败: {0}
protocol.serial.start=串口客户端 \"{0}\" 启动失败: 名称 \"{1}\" 无效
protocol.serial.start.err=串口客户端 \"{0}\" 启动失败(端口 \"{1}\"): {2}
protocol.socket.available=获取 SOCKET 可读取的数据字节数错误: {0}
protocol.socket.read.byte=读取 SOCKET 字节错误: {0}
protocol.socket.read.bytes=读取 SOCKET 字节数组错误: {0}
protocol.socket.reset=重置 SOCKET 输入流错误: {0}
protocol.socket.send.byte=发送 SOCKET 字节数据错误: {0}
protocol.socket.flush=输出 SOCKET 缓冲区失败: {0}
protocol.socket.start=开始 SOCKET 服务失败: 端口 \"{0}\" 无效
protocol.socket.start.err=开始 SOCKET 服务错误[HOST: {0}, PORT: {1}]: {2}
protocol.socket.conn.err=建立 SOCKET 连接错误: {0}
protocol.socket.client.host=开始 SOCKET 客户端 \"{0}\" 失败: 地址 \"{1}\" 无效
protocol.socket.client.port=开始 SOCKET 客户端 \"{0}\" 失败: 端口 \"{1}\" 无效
protocol.socket.client.start=开始 SOCKET 客户端 \"{0}\" 错误: {1}
protocol.custom.start=创建 CUSTOM 服务对象失败: 服务类 \"{0}\" 无效, 错误信息: {1}
protocol.custom.start.err=开始 CUSTOM 服务失败: 服务类 \"{0}\" 启动失败, 错误信息: {1}
protocol.custom.stop.err=停止 CUSTOM 服务失败: 服务类 \"{0}\" 停止失败, 错误信息: {1}
protocol.custom.client=开始 CUSTOM 客户端 \"{0}\" 失败, 错误信息: {1}
protocol.custom.available=获取 CUSTOM 服务可读取的数据长度错误: {0}
protocol.custom.read=读取 CUSTOM 服务数据错误: {0}
protocol.custom.reset=重置 CUSTOM 服务输入数据错误: {0}
protocol.custom.send=发送 CUSTOM 服务数据错误: {0}
protocol.custom.flush=输出 CUSTOM 服务缓冲区失败: {0}
# --- LAYER ---
protocol.layer.annotation.err=注解的 \"{0}\" 字段不能为空, 类: \"{1}\", 注解: \"{2}\"!
protocol.layer.login=远端连接 \"{0}\" 尚未登录，请求被抛弃: 指令[{1}], 版本[{2}]!
protocol.layer.login.err=未登录
protocol.layer.config=远端 \"{0}\" 请求的数据未配置: 指令[{1}], 版本[{2}]!
protocol.layer.config.err=数据指令不存在
protocol.layer.data.err=数据无效
protocol.layer.actor.err=远端 \"{0}\" 请求错误: {1}, 指令[{2}], 版本[{3}]
protocol.layer.response=远端的响应数据未配置: 指令[{0}], 版本[{1}], 数据类: {2}
protocol.layer.response.err=远端的响应数据未配置: 指令[{0}], 版本[{1}]!
protocol.layer.request=发送到远端的请求数据未配置: 指令[{0}], 版本[{1}]!
protocol.layer.callback=执行 \"{0}\" 回调错误: 指令[{1}], 版本[{2}], 信息: {3}
protocol.layer.serializer=序列化对象 \"{0}\" 处理 \"{1}\" 数据 \"{2}\" 错误: {3}
protocol.layer.method.err=执行服务 \"{2}\" 的 {0}.{1}() 方法错误: {3}
protocol.layer.monitor=接口状态监测运行时错误: {0}
protocol.layer.serializer.multi=服务配置 \"multiSerializer\" 已经被禁用!
protocol.layer.session.timout=登录超时
protocol.layer.session.logout=退出登录
protocol.layer.channel.started=服务通道 \"{0}\" 已启动[{1}]
protocol.layer.channel.stopped=服务通道 \"{0}\" 已停止
protocol.layer.channel.err=服务通道 \"{0}\" 错误: {1}
protocol.layer.channel.msg=服务通道 \"{0}\" 信息: {1}
protocol.layer.channel.start=开始服务通道 \"{0}\" 失败!
protocol.layer.channel.service=开始服务通道 \"{0}\" 错误!
protocol.layer.channel.logout=远端主动关闭连接
protocol.layer.channel.close=进程管理器计划关闭通讯进程 \"{0}\": {1}
protocol.layer.security.remote=接收到远端 \"{0}\" 连接，安全校验失败，连接被抛弃!
protocol.layer.security.client=客户端 \"{0}\" 已连接，安全校验失败，连接被抛弃!
protocol.layer.responser.err=执行响应对象回调错误!
protocol.layer.reader.err=数据读取对象 \"{0}\" 编码错误，循环执行 nextPackage() 已经达到 100 次!!!!!!!!!
protocol.layer.reader.data=处理远端 \"{0}\" 数据错误: {1}
protocol.layer.sender.data=发送数据到 \"{0}\" 失败: {1}
protocol.layer.client.connect=客户端 \"{0}\" 正在连接远端服务...
protocol.layer.client.connected=客户端 \"({0}){1}\": 连接成功，当前总数: {2}
protocol.layer.client.disconnect=客户端 \"({0}){1}\": 断开连接，当前总数: {2}
protocol.layer.client.failed=客户端 \"{0}\" 连接到远端服务失败: {1}
protocol.layer.client.err=客户端 \"({0}){1}\" 错误: {2}
protocol.layer.client.msg=客户端 \"({0}){1}\" 信息: {2}
protocol.layer.statistics=服务通道 \"{0}\" 运行状态统计，客户端: {1}, 远端: {2}, 总数: {3}, 进程: {4}
protocol.layer.consent.limit=已达到最大连接总数({0}/{1})，远端连接 \"{2}\" 被抛弃!
protocol.layer.remote.connect=远端 \"{0}\": 连接成功，当前总数: {1}
protocol.layer.remote.disconnect=远端 \"{0}\": 断开连接，当前总数: {1}
protocol.layer.remote.err=远端 \"{0}\" 错误: {1}
protocol.layer.remote.msg=远端 \"{0}\" 信息: {1}
protocol.layer.service.err=服务 \"{0}\" 错误: {1}
protocol.layer.service.started=服务 \"{0}\" 启动成功
protocol.layer.service.stopped=服务 \"{0}\" 已停止
protocol.layer.service.allstarted=全部服务启动成功
protocol.layer.service.allstopped=全部服务停止成功
# 框架层信息
framework.init=初始化框架，系统时区: \"{0}\"，当前时区: \"{1}\"，系统语言: \"{2}\"，当前语言: \"{3}\"
framework.db.add.err=增加数据 \"{0}\" 到数据库错误!
framework.db.delete.err=从数据库删除数据 \"{0}\" 错误!
framework.db.edit.err=编辑数据库数据 \"{0}\" 错误!
framework.db.bean.err=查询数据库数据 \"{0}\" 错误!
framework.db.count.err=查询数据库总数 \"{0}\" 错误!
framework.db.list.err=查询数据库列表数据 \"{0}\" 错误!
framework.db.page.err=查询数据库分页数据 \"{0}\" 错误!
framework.db.update.err=更新数据库数据 \"{0}\" 错误!
framework.db.start.err=启动数据库连接池 \"{0}\" 错误!
framework.actor.license=请求的数据无效或无权访问
framework.actor.method.err=方法名称 \"{0}\" 不存在或方法定义无效，指令[{1}], 版本[{2}]!
framework.actor.err=未找到请求的数据或数据服务未启动
framework.actor.type=执行器 \"{0}\" 泛类型构造错误!
framework.listener.type=事件侦听器 \"{0}\" 泛类型构造错误!
# 通用信息
global.response.err=执行操作失败











